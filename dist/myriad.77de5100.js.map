{"version":3,"sources":["enum.ts","utility.ts","index.ts"],"names":[],"mappings":"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","file":"myriad.77de5100.js","sourceRoot":"..","sourcesContent":["export enum EntertainmentType {\r\n    MUSIC = \"Music\"\r\n}","import { Venue, Entertainment } from './index';\r\n\r\n/**\r\n * \r\n * General-purpose utility functions\r\n */\r\nexport const newID = () => Math.round(Math.random() * 10000).toString();\r\nexport const futureDate = (future: number) => new Date(new Date().getTime() + (future * 24 * 60 * 60 * 1000));\r\n/**\r\n * \r\n * Functions to jelp create Venue objects\r\n */\r\nexport const minimumRequirements = () => Math.round(Math.random() * 300);\r\nexport const venueCapacity = () => Math.round(Math.random() * 500 + 300);\r\nexport const createVenue = () => new Venue();\r\nexport const createVenues = () => {\r\n    const venues: Venue[] = [];\r\n    for (let i = 0; i < 1000; i++) venues.push(createVenue());\r\n    return venues;\r\n}\r\n/**\r\n * \r\n * Functions to help create Entertainment objects\r\n */\r\nexport const createEntertainment = () => new Entertainment();\r\nexport const createEntertainments = () => {\r\n    const entertainment: Entertainment[] = [];\r\n    for (let i = 0; i < 1000; i++) entertainment.push(createEntertainment());\r\n    return entertainment;\r\n}","import { EntertainmentType } from \"./enum\";\r\nimport { \r\n    newID,\r\n    futureDate,\r\n    createVenues,\r\n    venueCapacity,\r\n    minimumRequirements,\r\n    createEntertainments\r\n} from \"./utility\";\r\n\r\nexport class Venue {\r\n    id: string;\r\n    types: EntertainmentType[];\r\n    minimumRequirements: number;\r\n    capacity: number;\r\n    score: number;\r\n    vacancy: Vacancy[];\r\n\r\n    constructor() {\r\n        this.id = newID();\r\n        this.types = [EntertainmentType.MUSIC];\r\n        this.minimumRequirements = minimumRequirements();\r\n        this.capacity = venueCapacity();\r\n        this.score = this.capacity - this.minimumRequirements;\r\n        this.vacancy = [];\r\n    }\r\n\r\n    createVacancy(future: number) {\r\n        this.vacancy.push(new Vacancy(this.id, futureDate(future)));\r\n    }\r\n\r\n    editVacancy() {\r\n\r\n    }\r\n\r\n    deleteVacancy() {\r\n\r\n    }\r\n}\r\n\r\nexport class Vacancy {\r\n    id: string;\r\n    date: Date;\r\n    venueID: string;\r\n    entertainment: Entertainment;\r\n\r\n    constructor(venueID: string, date: Date) {\r\n        this.id = newID();\r\n        this.date = date;\r\n        this.venueID = venueID;\r\n        this.entertainment = { id: \"0\", type: [EntertainmentType.MUSIC], ticketSales: 0 };\r\n    }\r\n}\r\n\r\nexport class Entertainment {\r\n    id: string;\r\n    type: EntertainmentType[];\r\n    ticketSales: number;\r\n\r\n    constructor() {\r\n        this.id = newID();\r\n        this.type = [EntertainmentType.MUSIC];\r\n        this.ticketSales = 0;\r\n    }\r\n}\r\n\r\nexport class System {\r\n    venues: Venue[];\r\n    entertainments: Entertainment[];\r\n\r\n    constructor() {\r\n        this.venues = createVenues();\r\n        this.entertainments = createEntertainments();\r\n    }\r\n\r\n    initiate() {\r\n        const random = Math.round(Math.random() * 1000);\r\n        console.log(this.venues[random]);\r\n        console.log(this.entertainments[random]); \r\n        setInterval(() => {\r\n            // const random = Math.round(Math.random() * 1000);\r\n            // console.log(this.venues[random]);\r\n            // console.log(this.entertainments[random]);\r\n            this.dailyTicketSaleAccumulation();\r\n            this.addVacancies();\r\n            this.pair();\r\n        }, 1000);\r\n    }\r\n\r\n    dailyTicketSaleAccumulation() {\r\n        this.entertainments.forEach(entertainment => {\r\n            entertainment.ticketSales += Math.round(Math.random() * 5);\r\n        });\r\n    }\r\n\r\n    addVacancies() {\r\n        let future = 0;\r\n        this.venues.forEach(venue => {\r\n            if (Math.round(Math.random() * 7) === 0) {\r\n                venue.createVacancy(future);\r\n            }\r\n        });\r\n    }\r\n\r\n    pair() {\r\n\r\n    }\r\n}\r\n\r\nconst newSystem = new System();\r\nnewSystem.initiate();"]}